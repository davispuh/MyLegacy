//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]

namespace Game
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class DataContainer : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new DataContainer object using the connection string found in the 'DataContainer' section of the application configuration file.
        /// </summary>
        public DataContainer() : base("name=DataContainer", "DataContainer")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new DataContainer object.
        /// </summary>
        public DataContainer(string connectionString) : base(connectionString, "DataContainer")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new DataContainer object.
        /// </summary>
        public DataContainer(EntityConnection connection) : base(connection, "DataContainer")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<MathTable> MathTable
        {
            get
            {
                if ((_MathTable == null))
                {
                    _MathTable = base.CreateObjectSet<MathTable>("MathTable");
                }
                return _MathTable;
            }
        }
        private ObjectSet<MathTable> _MathTable;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<WordTable> WordTable
        {
            get
            {
                if ((_WordTable == null))
                {
                    _WordTable = base.CreateObjectSet<WordTable>("WordTable");
                }
                return _WordTable;
            }
        }
        private ObjectSet<WordTable> _WordTable;

        #endregion
        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the MathTable EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMathTable(MathTable mathTable)
        {
            base.AddObject("MathTable", mathTable);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the WordTable EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToWordTable(WordTable wordTable)
        {
            base.AddObject("WordTable", wordTable);
        }

        #endregion
    }
    

    #endregion
    
    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Data", Name="MathTable")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class MathTable : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new MathTable object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="question">Initial value of the Question property.</param>
        /// <param name="answer">Initial value of the Answer property.</param>
        public static MathTable CreateMathTable(global::System.Guid id, global::System.String question, global::System.Double answer)
        {
            MathTable mathTable = new MathTable();
            mathTable.Id = id;
            mathTable.Question = question;
            mathTable.Answer = answer;
            return mathTable;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Guid _Id;
        partial void OnIdChanging(global::System.Guid value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Question
        {
            get
            {
                return _Question;
            }
            set
            {
                OnQuestionChanging(value);
                ReportPropertyChanging("Question");
                _Question = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Question");
                OnQuestionChanged();
            }
        }
        private global::System.String _Question;
        partial void OnQuestionChanging(global::System.String value);
        partial void OnQuestionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double Answer
        {
            get
            {
                return _Answer;
            }
            set
            {
                OnAnswerChanging(value);
                ReportPropertyChanging("Answer");
                _Answer = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Answer");
                OnAnswerChanged();
            }
        }
        private global::System.Double _Answer;
        partial void OnAnswerChanging(global::System.Double value);
        partial void OnAnswerChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Data", Name="WordTable")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class WordTable : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new WordTable object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="question">Initial value of the Question property.</param>
        /// <param name="answer">Initial value of the Answer property.</param>
        public static WordTable CreateWordTable(global::System.Guid id, global::System.String question, global::System.String answer)
        {
            WordTable wordTable = new WordTable();
            wordTable.Id = id;
            wordTable.Question = question;
            wordTable.Answer = answer;
            return wordTable;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Guid _Id;
        partial void OnIdChanging(global::System.Guid value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Question
        {
            get
            {
                return _Question;
            }
            set
            {
                OnQuestionChanging(value);
                ReportPropertyChanging("Question");
                _Question = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Question");
                OnQuestionChanged();
            }
        }
        private global::System.String _Question;
        partial void OnQuestionChanging(global::System.String value);
        partial void OnQuestionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Answer
        {
            get
            {
                return _Answer;
            }
            set
            {
                OnAnswerChanging(value);
                ReportPropertyChanging("Answer");
                _Answer = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Answer");
                OnAnswerChanged();
            }
        }
        private global::System.String _Answer;
        partial void OnAnswerChanging(global::System.String value);
        partial void OnAnswerChanged();

        #endregion
    
    }

    #endregion
    
}
